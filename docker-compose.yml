services:
  discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - bankitu-network
    environment:
      - EUREKA_SERVER_PORT=8761

  kafka:
    image: apache/kafka:latest
    container_name: broker
    environment:
      # Kafka Node Configuration
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENER: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093

      # Topic and Replication Settings
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

      # Log Directory
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs

      # KRaft Metadata Storage
      KAFKA_METADATA_LOG_DIR: /tmp/kraft-metadata
      KAFKA_LOG_RETENTION_HOURS: 168 # 7 Days
    ports:
      - "9092:9092"
    volumes:
      - ./kafka-data:/tmp/kraft-combined-logs
    healthcheck:
      test: [ "CMD-SHELL", "unset JMX_PORT; /opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092 > /dev/null 2>&1" ]
      interval: 10s
      timeout: 10s
      retries: 5

  user-db:
    image: postgres:15
    container_name: user-db
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: db_bankitu_user
    ports:
      - "5432:5432"
    networks:
      - bankitu-network
    volumes:
      - user-data:/var/lib/postgresql/data

  account-db:
    image: postgres:15
    container_name: account-db
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: db_bankitu_account
    ports:
      - "5433:5432"
    networks:
      - bankitu-network
    volumes:
      - account-data:/var/lib/postgresql/data

  transaction-db:
    image: postgres:15
    container_name: transaction-db
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: db_bankitu_transaction
    ports:
      - "5434:5432"
    networks:
      - bankitu-network
    volumes:
      - transaction-data:/var/lib/postgresql/data

  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - EUREKA_SERVER=${EUREKA_SERVER}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - bankitu-network
    depends_on:
      - discovery-server
      - auth-service
      - account-service
      - user-service 
      - transaction-service

  auth-service:
    build:
      context: ./auth-service
    container_name: auth-service
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - EUREKA_SERVER=${EUREKA_SERVER}
    ports:
      - "8084:8084"
    networks:
      - bankitu-network
    depends_on:
      - discovery-server

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8081:8081"
    networks:
      - bankitu-network
    depends_on:
      - discovery-server
      - user-db
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - EUREKA_SERVER=${EUREKA_SERVER}
      - DATABASE_HOST=user-db
      - DATABASE_PORT=5432
      - DATABASE_NAME=db_bankitu_user
      - DATABASE_USER=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}

  account-service:
    build:
      context: ./account-service
    container_name: account-service
    ports:
      - "8082:8082"
    networks:
      - bankitu-network
      - kafka-net
    depends_on:
      - discovery-server
      - account-db
      - kafka
    environment:
      - EUREKA_SERVER=${EUREKA_SERVER}
      - DATABASE_HOST=account-db
      - DATABASE_PORT=5432
      - DATABASE_NAME=db_bankitu_account
      - DATABASE_USER=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}

  transaction-service:
    build:
      context: ./transaction-service
    container_name: transaction-service
    ports:
      - "8083:8083"
    networks:
      - bankitu-network
      - kafka-net
    depends_on:
      - discovery-server
      - account-db
      - kafka
    environment:
      - EUREKA_SERVER=${EUREKA_SERVER}
      - DATABASE_HOST=transaction-db
      - DATABASE_PORT=5432
      - DATABASE_NAME=db_bankitu_transaction
      - DATABASE_USER=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}

networks:
  kafka-net:
    driver: bridge
  bankitu-network:
    driver: bridge

volumes:
  user-data:
  account-data:
  transaction-data:
